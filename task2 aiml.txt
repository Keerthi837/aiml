import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

# Load the dataset
df = pd.read_csv('your_data.csv')

# 1. Generate summary statistics
print("Summary Statistics:")
print(df.describe())

# 2. Create histograms and boxplots for numeric features
numeric_cols = df.select_dtypes(include=['number']).columns
for col in numeric_cols:
    plt.figure(figsize=(10, 5))
    plt.subplot(1, 2, 1)
    sns.histplot(df[col], kde=True)
    plt.title(f'Histogram of {col}')
    plt.subplot(1, 2, 2)
    sns.boxplot(y=df[col])
    plt.title(f'Boxplot of {col}')
    plt.show()

# 3. Use pairplot/correlation matrix for feature relationships
# Pairplot (for smaller datasets)
# sns.pairplot(df)
# plt.show()

# Correlation matrix
corr_matrix = df.corr()
plt.figure(figsize=(12, 10))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Matrix')
plt.show()

# Interactive scatter plots with Plotly (example with two variables)
if len(numeric_cols) >= 2:
    fig = px.scatter(df, x=numeric_cols[0], y=numeric_cols[1], title=f'Scatter plot of {numeric_cols[0]} vs {numeric_cols[1]}')
    fig.show()

# 4. Identify patterns, trends, or anomalies (example)
# Example: Scatter plot to identify clusters or outliers
if len(numeric_cols) >= 2:
    plt.figure(figsize=(10, 6))
    sns.scatterplot(x=numeric_cols[0], y=numeric_cols[1], data=df)
    plt.title(f'Scatter plot of {numeric_cols[0]} vs {numeric_cols[1]}')
    plt.show()

# 5. Make basic feature-level inferences from visuals (example)
# Example: Analyzing a specific feature's distribution
if len(numeric_cols) > 0:
    print(f"Inferences for {numeric_cols[0]}:")
    print(f"- Mean: {df[numeric_cols[0]].mean()}")
    print(f"- Median: {df[numeric_cols[0]].median()}")
    print(f"- Standard Deviation: {df[numeric_cols[0]].std()}")
    # Add more inferences based on visualizations